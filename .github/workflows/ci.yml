name: CI

on:
  push:
    branches: [ main, master, develop, feature/** ]
  pull_request:
    branches: [ main, master, develop ]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: PHP 8.4 • Lint & Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          coverage: none
          tools: composer:v2
          extensions: intl, pdo, pdo_pgsql, mbstring, json, redis

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: PHP CS Fixer (dry-run)
        run: composer cs-check

      - name: PHPStan
        run: composer phpstan-check

      - name: Rector (dry-run)
        run: composer rector-check

  tests:
    name: PHP 8.4 • Unit tests
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .env file
        run: |
          cp .env.example .env
          sed -i 's/DB_HOST=.*/DB_HOST=localhost/' .env
          sed -i 's/REDIS_HOST=.*/REDIS_HOST=localhost/' .env
          sed -i 's/REDIS_PORT=.*/REDIS_PORT=6379/' .env

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          coverage: xdebug
          tools: composer:v2
          extensions: intl, pdo, pdo_sqlite, mbstring, json

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Prepare test environment
        run: |
          cp -n .env.example .env || true
          echo "YII_ENV=test" >> .env
          echo "YII_DEBUG=1" >> .env
          echo "DB_DSN=sqlite:@app/tests/_data/test.sqlite" >> .env
          mkdir -p tests/_output

      - name: Run tests
        run: |
          vendor/bin/codecept run --coverage-xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./tests/_output/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
